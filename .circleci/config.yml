version: 2.1

orbs:
  aws-cli: circleci/aws-cli@1.2.1

workflows:
  version: 2
  "Build and deploy":
    jobs:
      - build
      - deploy_int:
          context: AWS
          requires:
            - build
          filters:
            branches:
              ignore: master
      - int_test:
          context: AWS
          requires:
            - deploy_int
      - remove_int:
          context: AWS
          requires:
            - int_test
      - deploy_dev:
          context: AWS
          requires:
            - build
          filters:
            branches:
              only: master
      - deploy_prod:
          context: AWS
          requires:
            - deploy_dev

executors:
  serverless:
    docker:
      - image: cimg/node:10.22
  browser:
    docker:
      - image: circleci/node:10-browsers-legacy

jobs:
  build:
    executor: serverless

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package-lock.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: npm ci

      - save_cache:
          paths:
            - ~/.npm
          key: v1-dependencies-{{ checksum "package-lock.json" }}

      # run tests!
      - run: npm test

      - store_test_results:
          path: test-results

  int_test:
    executor: browser

    working_directory: ~/repo

    steps:
      - aws-cli/install

      - checkout

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package-lock.json" }}

      - run:
          command: |
            npm ci
            STAGE=$(stage=$(echo "${CIRCLE_BRANCH}" | tr -cd '[:alnum:]'); echo ${stage:0:33})
            SERVICE_ENDPOINT=$(aws cloudformation describe-stacks --stack-name urlshrtnr-${STAGE} --query "Stacks[].Outputs[?OutputKey=='ServiceEndpoint'].OutputValue" --output text)
            mkdir -p test-results
            npx cucumber-js --world-parameters '{"baseUrl":"https://example.com", "shortenerUrl":"'${SERVICE_ENDPOINT}'"}' --format json:test-results/tests.cucumber

      - store_test_results:
          path: test-results

  deploy_int:
    executor: serverless

    working_directory: ~/repo

    steps:
      - checkout

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package-lock.json" }}

      - deploy:
          command: |
            npm ci
            STAGE=$(stage=$(echo "${CIRCLE_BRANCH}" | tr -cd '[:alnum:]'); echo ${stage:0:33})
            npx serverless deploy --stage ${STAGE}

  remove_int:
    executor: serverless

    working_directory: ~/repo

    steps:
      - checkout

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package-lock.json" }}

      - deploy:
          command: |
            npm ci
            STAGE=$(stage=$(echo "${CIRCLE_BRANCH}" | tr -cd '[:alnum:]'); echo ${stage:0:33})
            npx serverless remove --stage ${STAGE}


  deploy_dev:
    executor: serverless

    working_directory: ~/repo

    steps:
      - checkout

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package-lock.json" }}

      - deploy:
          command: |
            npm ci
            npx serverless deploy --stage dev

  deploy_prod:
    executor: serverless

    working_directory: ~/repo

    steps:
      - checkout

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package-lock.json" }}

      - deploy:
          command: |
            npm ci
            npx serverless deploy --stage prod