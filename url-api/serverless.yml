service:
  name: urlShrtnrApi

plugins:
  - serverless-step-functions
  - serverless-pseudo-parameters

provider:
  name: aws
  runtime: nodejs8.10
  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'eu-west-1'}
  memorySize: 512
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "dynamodb:GetItem"
        - "dynamodb:PutItem"
      Resource: !GetAtt UrlsTable.Arn
    - Effect: "Allow"
      Action:
        - "states:StartExecution"
      Resource:
        Ref: SaveUrlStateMachine
    - Effect: "Allow"
      Action:
        - "states:DescribeExecution"
      Resource: arn:aws:states:#{AWS::Region}:#{AWS::AccountId}:execution:saveUrl-${self:provider.stage}:*

functions:
  shortenForm:
    handler: management-api.shorteningForm
    events:
      - http: GET /
  shortenUrl:
    handler: management-api.shortenUrl
    environment:
      SAVE_URL:
        Ref: SaveUrlStateMachine
      SHORTENED_ROOT: https://${ssm:/url-shrtnr/short-domain}/
    events:
      - http: POST shorten
  serveUrl:
    handler: serving-api.serveUrl
    environment:
      TABLE_NAME:
        Ref: UrlsTable
    events:
      - http: GET {shortId}
  retryGuard:
    handler: save-urls.retryGuard
    name: ${self:service}-retryGuard-${self:provider.stage}
  generateId:
    handler: save-urls.generateId
    name: ${self:service}-generateId-${self:provider.stage}
  saveUrl:
    handler: save-urls.saveUrl
    name: ${self:service}-saveUrl-${self:provider.stage}
    environment:
      TABLE_NAME:
        Ref: UrlsTable

stepFunctions:
  stateMachines:
    saveUrl:
      name: saveUrl-${self:provider.stage}
      id: SaveUrlStateMachine
      definition:
        Comment: Generate a short id for a URL and respond synchronously
        StartAt: RetryGuard
        States:
          RetryGuard:
            Type: Task
            Resource: arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:${self:service}-retryGuard-${self:provider.stage}
            Next: RetryCheck
          RetryCheck:
            Type: Choice
            Choices:
              - Variable: $.retries
                NumericGreaterThan: 3
                Next: RetriesExceeded
            Default: GenerateId
          RetriesExceeded:
            Type: Fail
            Cause: Retries Exceeded
          GenerateId:
            Type: Task
            Resource: arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:${self:service}-generateId-${self:provider.stage}
            Next: SaveUrl
          SaveUrl:
            Type: Task
            Resource: arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:${self:service}-saveUrl-${self:provider.stage}
            End: true
            Catch:
              - ErrorEquals:
                  - ConditionalCheckFailedException
                ResultPath: "$.error-info"
                Next: RetryGuard

resources:
  Resources:
    UrlsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: shortId
            AttributeType: S
        BillingMode: PAY_PER_REQUEST
        KeySchema:
          - AttributeName: shortId
            KeyType: HASH
    ShortenedDistribution:
      Type: AWS::CloudFront::Distribution
      Properties:
        DistributionConfig:
          Aliases:
            - ${ssm:/url-shrtnr/short-domain}
          DefaultCacheBehavior:
            AllowedMethods:
              - DELETE
              - GET
              - HEAD
              - OPTIONS
              - PATCH
              - POST
              - PUT
            CachedMethods:
              - HEAD
              - GET
            DefaultTTL: 30
            ForwardedValues:
              QueryString: false
            TargetOriginId: api
            ViewerProtocolPolicy: redirect-to-https
          Enabled: false
          HttpVersion: http2
          Origins:
            - Id: api
              CustomOriginConfig:
                OriginProtocolPolicy: https-only
              DomainName:
                !Join
                - '.'
                - - !Ref ApiGatewayRestApi
                  - 'execute-api'
                  - !Ref 'AWS::Region'
                  - 'amazonaws'
                  - 'com'
              OriginPath: /${self:provider.stage}
          PriceClass: PriceClass_100
          ViewerCertificate:
            AcmCertificateArn: ${ssm:/url-shrtnr/ssl-certificate}
            SslSupportMethod: sni-only
    ShortenedRecordSet:
      Type: AWS::Route53::RecordSet
      Properties:
        AliasTarget:
          DNSName: !GetAtt ShortenedDistribution.DomainName
          HostedZoneId: Z2FDTNDATAQYW2
        HostedZoneName: ${ssm:/url-shrtnr/short-domain}.
        Name: ${ssm:/url-shrtnr/short-domain}.
        Type: A
